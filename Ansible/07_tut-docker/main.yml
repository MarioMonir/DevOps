- name: Install Docker on AWS Master Devops Tech-hive Server
  hosts: all
  become: true

  # - - - - - - - - - - - - - - - - - -

  vars:
    container_count: 2
    default_container_name: docker
    default_container_image: ubuntu
    default_container_command: sleep 1

  # - - - - - - - - - - - - - - - - - -

  tasks:
    - name: "Just Ping the server"
      ansible.builtin.ping:

    - name: "get the disto of server"
      ansible.builtin.debug:
        msg: " {{ ansible_distribution }} / {{ ansible_os_family }} "

    - name: Ensure aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

          
    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Install Docker Module for Python
      pip:
        name: docker
         
    # - name: Ensure nginx is at the latest version
    #   package:
    #     name: nginx
    #     state: latest

    # - name: Ensure nginx service is started
    #   service:
    #     name: nginx
    #     state: started
    #     enabled: true

    # - name: Pull default Docker image
    #   community.docker.docker_image:
    #     name: "{{ default_container_image }}"
    #     source: pull


    # - name: Create default containers
    #   community.docker.docker_container:
    #     name: "{{ default_container_name }}{{ item }}"
    #     image: "{{ default_container_image }}"
    #     command: "{{ default_container_command }}"
    #     state: present
    #   with_sequence: count={{ container_count }}


    - name: Start container with healthstatus
      community.docker.docker_container:
        name: nginx
        image: nginx:latest
        state: started
        ports:
          - "80:80"
